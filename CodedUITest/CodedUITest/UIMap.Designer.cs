// ------------------------------------------------------------------------------
//  <auto-generated>
//      Этот код был создан построителем кодированных тестов ИП.
//      Версия: 16.0.0.0
//
//      Изменения, внесенные в этот файл, могут привести к неправильной работе кода и будут
//      утрачены при повторном формировании кода.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITest
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.28315.86")]
    public partial class UIMap
    {
        
        /// <summary>
        /// ПолныйТестПрограммыСРабСтола - Используйте "ПолныйТестПрограммыСРабСтолаParams" для передачи параметров в этот метод.
        /// </summary>
        public void ПолныйТестПрограммыСРабСтола()
        {
            #region Variable Declarations
            WinEdit uITextBox1Edit = this.UIФайловыйПутьТестерWindow.UITextBox1Window.UITextBox1Edit;
            WinButton uIДобавитьButton = this.UIФайловыйПутьТестерWindow.UIДобавитьWindow.UIДобавитьButton;
            WinButton uIОКButton = this.UIОшибкаWindow.UIОКWindow.UIОКButton;
            WinList uIListBox1List = this.UIФайловыйПутьТестерWindow.UIListBox1Window.UIListBox1List;
            WinButton uIУдалитьButton = this.UIФайловыйПутьТестерWindow.UIУдалитьWindow.UIУдалитьButton;
            WinButton uIПереместитьButton = this.UIФайловыйПутьТестерWindow.UIПереместитьWindow.UIПереместитьButton;
            WinList uIListBox2List = this.UIФайловыйПутьТестерWindow.UIListBox2Window.UIListBox2List;
            WinButton uIУдалитьButton1 = this.UIФайловыйПутьТестерWindow.UIУдалитьWindow1.UIУдалитьButton;
            WinButton uIВернутьButton = this.UIФайловыйПутьТестерWindow.UIВернутьWindow.UIВернутьButton;
            WinButton uIЗакрытьButton = this.UIФайловыйПутьТестерWindow.UIФайловыйПутьТестерTitleBar.UIЗакрытьButton;
            #endregion

            // Щелкните "textBox1" надпись
            Mouse.Click(uITextBox1Edit, new Point(210, 12));

            // Щелкните "Добавить" кнопка
            Mouse.Click(uIДобавитьButton, new Point(118, 48));

            // Щелкните "ОК" кнопка
            System.Threading.Thread.Sleep(1000); // для визуализации
            Mouse.Click(uIОКButton, new Point(47, 12));


            // Тип "с:\GOOD" в "textBox1" надпись
            uITextBox1Edit.Text = this.ПолныйТестПрограммыСРабСтолаParams.UITextBox1EditText1;

            // Щелкните "Добавить" кнопка
            System.Threading.Thread.Sleep(500); // для визуализации
            Mouse.Click(uIДобавитьButton, new Point(69, 35));

            // Тип "d:\GOOD2" в "textBox1" надпись
            uITextBox1Edit.Text = this.ПолныйТестПрограммыСРабСтолаParams.UITextBox1EditText2;

            // Щелкните "Добавить" кнопка
            System.Threading.Thread.Sleep(500); // для визуализации
            Mouse.Click(uIДобавитьButton, new Point(135, 18));

            // Тип "2:\eroor" в "textBox1" надпись
            uITextBox1Edit.Text = this.ПолныйТестПрограммыСРабСтолаParams.UITextBox1EditText3;

            // Щелкните "Добавить" кнопка
            System.Threading.Thread.Sleep(500); // для визуализации
            Mouse.Click(uIДобавитьButton, new Point(24, 38));

            // Тип "cd:\error2" в "textBox1" надпись
            uITextBox1Edit.Text = this.ПолныйТестПрограммыСРабСтолаParams.UITextBox1EditText4;

            // Щелкните "Добавить" кнопка
            System.Threading.Thread.Sleep(500); // для визуализации
            Mouse.Click(uIДобавитьButton, new Point(78, 41));

            // Тип "c:\wait/error" в "textBox1" надпись
            uITextBox1Edit.Text = this.ПолныйТестПрограммыСРабСтолаParams.UITextBox1EditText5;

            // Щелкните "Добавить" кнопка
            System.Threading.Thread.Sleep(500); // для визуализации
            Mouse.Click(uIДобавитьButton, new Point(54, 61));

            // Тип "c:\" в "textBox1" надпись
            uITextBox1Edit.Text = this.ПолныйТестПрограммыСРабСтолаParams.UITextBox1EditText6;

            // Щелкните "Добавить" кнопка
            System.Threading.Thread.Sleep(500); // для визуализации
            Mouse.Click(uIДобавитьButton, new Point(64, 20));

            // Тип "gasdf" в "textBox1" надпись
            uITextBox1Edit.Text = this.ПолныйТестПрограммыСРабСтолаParams.UITextBox1EditText7;

            // Щелкните "Добавить" кнопка
            System.Threading.Thread.Sleep(500); // для визуализации
            Mouse.Click(uIДобавитьButton, new Point(68, 9));

            // Выберите "c:\" в "listBox1" список
            uIListBox1List.SelectedItemsAsString = this.ПолныйТестПрограммыСРабСтолаParams.UIListBox1ListSelectedItemsAsString;

            // Щелкните "Удалить" кнопка
            System.Threading.Thread.Sleep(500); // для визуализации
            Mouse.Click(uIУдалитьButton, new Point(108, 41));

            // Выберите "d:\GOOD2" в "listBox1" список
            uIListBox1List.SelectedItemsAsString = this.ПолныйТестПрограммыСРабСтолаParams.UIListBox1ListSelectedItemsAsString1;

            // Щелкните "Переместить" кнопка
            System.Threading.Thread.Sleep(500); // для визуализации
            Mouse.Click(uIПереместитьButton, new Point(62, 25));

            // Выберите "gasdf" в "listBox2" список
            uIListBox2List.SelectedItemsAsString = this.ПолныйТестПрограммыСРабСтолаParams.UIListBox2ListSelectedItemsAsString;

            // Щелкните "Удалить" кнопка
            System.Threading.Thread.Sleep(500); // для визуализации
            Mouse.Click(uIУдалитьButton1, new Point(79, 27));

            // Выберите "d:\GOOD2" в "listBox2" список
            uIListBox2List.SelectedItemsAsString = this.ПолныйТестПрограммыСРабСтолаParams.UIListBox2ListSelectedItemsAsString1;

            // Щелкните "Удалить" кнопка
            System.Threading.Thread.Sleep(500); // для визуализации
            Mouse.Click(uIУдалитьButton1, new Point(98, 24));

            // Выберите "c:\wait/error" в "listBox2" список
            uIListBox2List.SelectedItemsAsString = this.ПолныйТестПрограммыСРабСтолаParams.UIListBox2ListSelectedItemsAsString2;

            // Щелкните "Удалить" кнопка
            System.Threading.Thread.Sleep(500); // для визуализации
            Mouse.Click(uIУдалитьButton1, new Point(118, 28));

            // Выберите "2:\eroor" в "listBox2" список
            uIListBox2List.SelectedItemsAsString = this.ПолныйТестПрограммыСРабСтолаParams.UIListBox2ListSelectedItemsAsString3;

            // Щелкните "Удалить" кнопка
            System.Threading.Thread.Sleep(500); // для визуализации
            Mouse.Click(uIУдалитьButton1, new Point(118, 14));

            // Выберите "cd:\error2" в "listBox2" список
            uIListBox2List.SelectedItemsAsString = this.ПолныйТестПрограммыСРабСтолаParams.UIListBox2ListSelectedItemsAsString4;

            // Щелкните "Вернуть" кнопка
            System.Threading.Thread.Sleep(500); // для визуализации
            Mouse.Click(uIВернутьButton, new Point(83, 33));

            // Тип "d:\error2" в "textBox1" надпись
            uITextBox1Edit.Text = this.ПолныйТестПрограммыСРабСтолаParams.UITextBox1EditText8;

            // Щелкните "Добавить" кнопка
            System.Threading.Thread.Sleep(500); // для визуализации
            Mouse.Click(uIДобавитьButton, new Point(89, 22));

            // Щелкните "Закрыть" кнопка
            System.Threading.Thread.Sleep(1000); // для визуализации
            Mouse.Click(uIЗакрытьButton, new Point(21, 18));
        }
        
        /// <summary>
        /// TESTmethod - Используйте "TESTmethodParams" для передачи параметров в этот метод.
        /// </summary>
        public void TESTmethod()
        {
            #region Variable Declarations
            WinListItem uIWFApplicationexeярлыListItem = this.UIItemWindow.UIFolderViewWindow.UIWFApplicationexeярлыListItem;
            WinMenuItem uIОткрытьMenuItem = this.UIItemWindow1.UIКонтекстMenu.UIОткрытьMenuItem;
            WinEdit uITextBox1Edit = this.UIФайловыйПутьТестерWindow.UITextBox1Window.UITextBox1Edit;
            WinButton uIДобавитьButton = this.UIФайловыйПутьТестерWindow.UIДобавитьWindow.UIДобавитьButton;
            WinList uIListBox1List = this.UIФайловыйПутьТестерWindow.UIListBox1Window.UIListBox1List;
            WinButton uIПереместитьButton = this.UIФайловыйПутьТестерWindow.UIПереместитьWindow.UIПереместитьButton;
            WinList uIListBox2List = this.UIФайловыйПутьТестерWindow.UIListBox2Window.UIListBox2List;
            WinButton uIУдалитьButton = this.UIФайловыйПутьТестерWindow.UIУдалитьWindow1.UIУдалитьButton;
            WinButton uIВернутьButton = this.UIФайловыйПутьТестерWindow.UIВернутьWindow.UIВернутьButton;
            WinButton uIЗакрытьButton = this.UIФайловыйПутьТестерWindow.UIФайловыйПутьТестерTitleBar.UIЗакрытьButton;
            #endregion

            // Правая-Щелкните "WFApplication.exe — ярлык" элемент списка
            Mouse.Click(uIWFApplicationexeярлыListItem, MouseButtons.Right, ModifierKeys.None, new Point(53, 27));

            // Щелкните "Открыть" элемент меню
            Mouse.Click(uIОткрытьMenuItem, new Point(57, 16));

            // Тип "" в "textBox1" надпись
            uITextBox1Edit.Text = this.TESTmethodParams.UITextBox1EditText;

            // Тип "Alt + {LShiftKey}" в "textBox1" надпись
            Keyboard.SendKeys(uITextBox1Edit, this.TESTmethodParams.UITextBox1EditSendKeys, ModifierKeys.Alt);

            // Тип "c:\asdfasdf" в "textBox1" надпись
            uITextBox1Edit.Text = this.TESTmethodParams.UITextBox1EditText1;

            // Щелкните "Добавить" кнопка
            Mouse.Click(uIДобавитьButton, new Point(137, 15));

            // Тип "cd:\asdfasdfa" в "textBox1" надпись
            uITextBox1Edit.Text = this.TESTmethodParams.UITextBox1EditText2;

            // Щелкните "Добавить" кнопка
            Mouse.Click(uIДобавитьButton, new Point(78, 38));

            // Выберите "c:\asdfasdf" в "listBox1" список
            uIListBox1List.SelectedItemsAsString = this.TESTmethodParams.UIListBox1ListSelectedItemsAsString;

            // Щелкните "Переместить" кнопка
            Mouse.Click(uIПереместитьButton, new Point(88, 31));

            // Выберите "cd:\asdfasdfa" в "listBox2" список
            uIListBox2List.SelectedItemsAsString = this.TESTmethodParams.UIListBox2ListSelectedItemsAsString;

            // Щелкните "Удалить" кнопка
            Mouse.Click(uIУдалитьButton, new Point(133, 34));

            // Выберите "c:\asdfasdf" в "listBox2" список
            uIListBox2List.SelectedItemsAsString = this.TESTmethodParams.UIListBox2ListSelectedItemsAsString1;

            // Щелкните "Вернуть" кнопка
            Mouse.Click(uIВернутьButton, new Point(84, 31));

            // Щелкните "Закрыть" кнопка
            Mouse.Click(uIЗакрытьButton, new Point(22, 21));
        }
        
        #region Properties
        public virtual ПолныйТестПрограммыСРабСтолаParams ПолныйТестПрограммыСРабСтолаParams
        {
            get
            {
                if ((this.mПолныйТестПрограммыСРабСтолаParams == null))
                {
                    this.mПолныйТестПрограммыСРабСтолаParams = new ПолныйТестПрограммыСРабСтолаParams();
                }
                return this.mПолныйТестПрограммыСРабСтолаParams;
            }
        }
        
        public virtual TESTmethodParams TESTmethodParams
        {
            get
            {
                if ((this.mTESTmethodParams == null))
                {
                    this.mTESTmethodParams = new TESTmethodParams();
                }
                return this.mTESTmethodParams;
            }
        }
        
        public UIФайловыйПутьТестерWindow UIФайловыйПутьТестерWindow
        {
            get
            {
                if ((this.mUIФайловыйПутьТестерWindow == null))
                {
                    this.mUIФайловыйПутьТестерWindow = new UIФайловыйПутьТестерWindow();
                }
                return this.mUIФайловыйПутьТестерWindow;
            }
        }
        
        public UIОшибкаWindow UIОшибкаWindow
        {
            get
            {
                if ((this.mUIОшибкаWindow == null))
                {
                    this.mUIОшибкаWindow = new UIОшибкаWindow();
                }
                return this.mUIОшибкаWindow;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1();
                }
                return this.mUIItemWindow1;
            }
        }
        #endregion
        
        #region Fields
        private ПолныйТестПрограммыСРабСтолаParams mПолныйТестПрограммыСРабСтолаParams;
        
        private TESTmethodParams mTESTmethodParams;
        
        private UIФайловыйПутьТестерWindow mUIФайловыйПутьТестерWindow;
        
        private UIОшибкаWindow mUIОшибкаWindow;
        
        private UIItemWindow mUIItemWindow;
        
        private UIItemWindow1 mUIItemWindow1;
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "ПолныйТестПрограммыСРабСтола"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.28315.86")]
    public class ПолныйТестПрограммыСРабСтолаParams
    {
        
        #region Fields
        /// <summary>
        /// Запуск "%USERPROFILE%\Desktop\Учеба\3 курс\Тест ПО\LAB3\WFApplication\WFApplication\bin\Debug\WFApplication.exe"
        /// </summary>
        public string UIФайловыйПутьТестерWindowExePath = "D:\\Users\\IcePrince\\Desktop\\Учеба\\3 курс\\Тест ПО\\LAB3\\WFApplication\\WFApplication\\" +
            "bin\\Debug\\WFApplication.exe";
        
        /// <summary>
        /// Запуск "%USERPROFILE%\Desktop\Учеба\3 курс\Тест ПО\LAB3\WFApplication\WFApplication\bin\Debug\WFApplication.exe"
        /// </summary>
        public string UIФайловыйПутьТестерWindowAlternateExePath = "%USERPROFILE%\\Desktop\\Учеба\\3 курс\\Тест ПО\\LAB3\\WFApplication\\WFApplication\\bin\\D" +
            "ebug\\WFApplication.exe";
        
        /// <summary>
        /// Тип "с" в "textBox1" надпись
        /// </summary>
        public string UITextBox1EditText = "с";
        
        /// <summary>
        /// Тип "Alt + {LShiftKey}" в "textBox1" надпись
        /// </summary>
        public string UITextBox1EditSendKeys = "{LShiftKey}";
        
        /// <summary>
        /// Тип "с:\GOOD" в "textBox1" надпись
        /// </summary>
        public string UITextBox1EditText1 = "с:\\GOOD";
        
        /// <summary>
        /// Тип "d:\GOOD2" в "textBox1" надпись
        /// </summary>
        public string UITextBox1EditText2 = "d:\\GOOD2";
        
        /// <summary>
        /// Тип "2:\eroor" в "textBox1" надпись
        /// </summary>
        public string UITextBox1EditText3 = "2:\\eroor";
        
        /// <summary>
        /// Тип "cd:\error2" в "textBox1" надпись
        /// </summary>
        public string UITextBox1EditText4 = "cd:\\error2";
        
        /// <summary>
        /// Тип "c:\wait/error" в "textBox1" надпись
        /// </summary>
        public string UITextBox1EditText5 = "c:\\wait/error";
        
        /// <summary>
        /// Тип "c:\" в "textBox1" надпись
        /// </summary>
        public string UITextBox1EditText6 = "c:\\";
        
        /// <summary>
        /// Тип "gasdf" в "textBox1" надпись
        /// </summary>
        public string UITextBox1EditText7 = "gasdf";
        
        /// <summary>
        /// Выберите "c:\" в "listBox1" список
        /// </summary>
        public string UIListBox1ListSelectedItemsAsString = "c:\\";
        
        /// <summary>
        /// Выберите "d:\GOOD2" в "listBox1" список
        /// </summary>
        public string UIListBox1ListSelectedItemsAsString1 = "d:\\GOOD2";
        
        /// <summary>
        /// Выберите "gasdf" в "listBox2" список
        /// </summary>
        public string UIListBox2ListSelectedItemsAsString = "gasdf";
        
        /// <summary>
        /// Выберите "d:\GOOD2" в "listBox2" список
        /// </summary>
        public string UIListBox2ListSelectedItemsAsString1 = "d:\\GOOD2";
        
        /// <summary>
        /// Выберите "c:\wait/error" в "listBox2" список
        /// </summary>
        public string UIListBox2ListSelectedItemsAsString2 = "c:\\wait/error";
        
        /// <summary>
        /// Выберите "2:\eroor" в "listBox2" список
        /// </summary>
        public string UIListBox2ListSelectedItemsAsString3 = "2:\\eroor";
        
        /// <summary>
        /// Выберите "cd:\error2" в "listBox2" список
        /// </summary>
        public string UIListBox2ListSelectedItemsAsString4 = "cd:\\error2";
        
        /// <summary>
        /// Тип "d:\error2" в "textBox1" надпись
        /// </summary>
        public string UITextBox1EditText8 = "d:\\error2";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "TESTmethod"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.28315.86")]
    public class TESTmethodParams
    {
        
        #region Fields
        /// <summary>
        /// Тип "" в "textBox1" надпись
        /// </summary>
        public string UITextBox1EditText = "";
        
        /// <summary>
        /// Тип "Alt + {LShiftKey}" в "textBox1" надпись
        /// </summary>
        public string UITextBox1EditSendKeys = "{LShiftKey}";
        
        /// <summary>
        /// Тип "c:\asdfasdf" в "textBox1" надпись
        /// </summary>
        public string UITextBox1EditText1 = "c:\\asdfasdf";
        
        /// <summary>
        /// Тип "cd:\asdfasdfa" в "textBox1" надпись
        /// </summary>
        public string UITextBox1EditText2 = "cd:\\asdfasdfa";
        
        /// <summary>
        /// Выберите "c:\asdfasdf" в "listBox1" список
        /// </summary>
        public string UIListBox1ListSelectedItemsAsString = "c:\\asdfasdf";
        
        /// <summary>
        /// Выберите "cd:\asdfasdfa" в "listBox2" список
        /// </summary>
        public string UIListBox2ListSelectedItemsAsString = "cd:\\asdfasdfa";
        
        /// <summary>
        /// Выберите "c:\asdfasdf" в "listBox2" список
        /// </summary>
        public string UIListBox2ListSelectedItemsAsString1 = "c:\\asdfasdf";
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.28315.86")]
    public class UIФайловыйПутьТестерWindow : WinWindow
    {
        
        public UIФайловыйПутьТестерWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Файловый Путь Тестер";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Файловый Путь Тестер");
            #endregion
        }
        
        #region Properties
        public UITextBox1Window UITextBox1Window
        {
            get
            {
                if ((this.mUITextBox1Window == null))
                {
                    this.mUITextBox1Window = new UITextBox1Window(this);
                }
                return this.mUITextBox1Window;
            }
        }
        
        public UIДобавитьWindow UIДобавитьWindow
        {
            get
            {
                if ((this.mUIДобавитьWindow == null))
                {
                    this.mUIДобавитьWindow = new UIДобавитьWindow(this);
                }
                return this.mUIДобавитьWindow;
            }
        }
        
        public UIListBox1Window UIListBox1Window
        {
            get
            {
                if ((this.mUIListBox1Window == null))
                {
                    this.mUIListBox1Window = new UIListBox1Window(this);
                }
                return this.mUIListBox1Window;
            }
        }
        
        public UIУдалитьWindow UIУдалитьWindow
        {
            get
            {
                if ((this.mUIУдалитьWindow == null))
                {
                    this.mUIУдалитьWindow = new UIУдалитьWindow(this);
                }
                return this.mUIУдалитьWindow;
            }
        }
        
        public UIПереместитьWindow UIПереместитьWindow
        {
            get
            {
                if ((this.mUIПереместитьWindow == null))
                {
                    this.mUIПереместитьWindow = new UIПереместитьWindow(this);
                }
                return this.mUIПереместитьWindow;
            }
        }
        
        public UIListBox2Window UIListBox2Window
        {
            get
            {
                if ((this.mUIListBox2Window == null))
                {
                    this.mUIListBox2Window = new UIListBox2Window(this);
                }
                return this.mUIListBox2Window;
            }
        }
        
        public UIУдалитьWindow1 UIУдалитьWindow1
        {
            get
            {
                if ((this.mUIУдалитьWindow1 == null))
                {
                    this.mUIУдалитьWindow1 = new UIУдалитьWindow1(this);
                }
                return this.mUIУдалитьWindow1;
            }
        }
        
        public UIВернутьWindow UIВернутьWindow
        {
            get
            {
                if ((this.mUIВернутьWindow == null))
                {
                    this.mUIВернутьWindow = new UIВернутьWindow(this);
                }
                return this.mUIВернутьWindow;
            }
        }
        
        public UIФайловыйПутьТестерTitleBar UIФайловыйПутьТестерTitleBar
        {
            get
            {
                if ((this.mUIФайловыйПутьТестерTitleBar == null))
                {
                    this.mUIФайловыйПутьТестерTitleBar = new UIФайловыйПутьТестерTitleBar(this);
                }
                return this.mUIФайловыйПутьТестерTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UITextBox1Window mUITextBox1Window;
        
        private UIДобавитьWindow mUIДобавитьWindow;
        
        private UIListBox1Window mUIListBox1Window;
        
        private UIУдалитьWindow mUIУдалитьWindow;
        
        private UIПереместитьWindow mUIПереместитьWindow;
        
        private UIListBox2Window mUIListBox2Window;
        
        private UIУдалитьWindow1 mUIУдалитьWindow1;
        
        private UIВернутьWindow mUIВернутьWindow;
        
        private UIФайловыйПутьТестерTitleBar mUIФайловыйПутьТестерTitleBar;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.28315.86")]
    public class UITextBox1Window : WinWindow
    {
        
        public UITextBox1Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBox1";
            this.WindowTitles.Add("Файловый Путь Тестер");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBox1Edit
        {
            get
            {
                if ((this.mUITextBox1Edit == null))
                {
                    this.mUITextBox1Edit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITextBox1Edit.WindowTitles.Add("Файловый Путь Тестер");
                    #endregion
                }
                return this.mUITextBox1Edit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBox1Edit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.28315.86")]
    public class UIДобавитьWindow : WinWindow
    {
        
        public UIДобавитьWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button1";
            this.WindowTitles.Add("Файловый Путь Тестер");
            #endregion
        }
        
        #region Properties
        public WinButton UIДобавитьButton
        {
            get
            {
                if ((this.mUIДобавитьButton == null))
                {
                    this.mUIДобавитьButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIДобавитьButton.SearchProperties[WinButton.PropertyNames.Name] = "Добавить";
                    this.mUIДобавитьButton.WindowTitles.Add("Файловый Путь Тестер");
                    #endregion
                }
                return this.mUIДобавитьButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIДобавитьButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.28315.86")]
    public class UIListBox1Window : WinWindow
    {
        
        public UIListBox1Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "listBox1";
            this.WindowTitles.Add("Файловый Путь Тестер");
            #endregion
        }
        
        #region Properties
        public WinList UIListBox1List
        {
            get
            {
                if ((this.mUIListBox1List == null))
                {
                    this.mUIListBox1List = new WinList(this);
                    #region Условия поиска
                    this.mUIListBox1List.WindowTitles.Add("Файловый Путь Тестер");
                    #endregion
                }
                return this.mUIListBox1List;
            }
        }
        #endregion
        
        #region Fields
        private WinList mUIListBox1List;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.28315.86")]
    public class UIУдалитьWindow : WinWindow
    {
        
        public UIУдалитьWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button2";
            this.WindowTitles.Add("Файловый Путь Тестер");
            #endregion
        }
        
        #region Properties
        public WinButton UIУдалитьButton
        {
            get
            {
                if ((this.mUIУдалитьButton == null))
                {
                    this.mUIУдалитьButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIУдалитьButton.SearchProperties[WinButton.PropertyNames.Name] = "Удалить";
                    this.mUIУдалитьButton.WindowTitles.Add("Файловый Путь Тестер");
                    #endregion
                }
                return this.mUIУдалитьButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIУдалитьButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.28315.86")]
    public class UIПереместитьWindow : WinWindow
    {
        
        public UIПереместитьWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button3";
            this.WindowTitles.Add("Файловый Путь Тестер");
            #endregion
        }
        
        #region Properties
        public WinButton UIПереместитьButton
        {
            get
            {
                if ((this.mUIПереместитьButton == null))
                {
                    this.mUIПереместитьButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIПереместитьButton.SearchProperties[WinButton.PropertyNames.Name] = "Переместить";
                    this.mUIПереместитьButton.WindowTitles.Add("Файловый Путь Тестер");
                    #endregion
                }
                return this.mUIПереместитьButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIПереместитьButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.28315.86")]
    public class UIListBox2Window : WinWindow
    {
        
        public UIListBox2Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "listBox2";
            this.WindowTitles.Add("Файловый Путь Тестер");
            #endregion
        }
        
        #region Properties
        public WinList UIListBox2List
        {
            get
            {
                if ((this.mUIListBox2List == null))
                {
                    this.mUIListBox2List = new WinList(this);
                    #region Условия поиска
                    this.mUIListBox2List.WindowTitles.Add("Файловый Путь Тестер");
                    #endregion
                }
                return this.mUIListBox2List;
            }
        }
        #endregion
        
        #region Fields
        private WinList mUIListBox2List;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.28315.86")]
    public class UIУдалитьWindow1 : WinWindow
    {
        
        public UIУдалитьWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button4";
            this.WindowTitles.Add("Файловый Путь Тестер");
            #endregion
        }
        
        #region Properties
        public WinButton UIУдалитьButton
        {
            get
            {
                if ((this.mUIУдалитьButton == null))
                {
                    this.mUIУдалитьButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIУдалитьButton.SearchProperties[WinButton.PropertyNames.Name] = "Удалить";
                    this.mUIУдалитьButton.WindowTitles.Add("Файловый Путь Тестер");
                    #endregion
                }
                return this.mUIУдалитьButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIУдалитьButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.28315.86")]
    public class UIВернутьWindow : WinWindow
    {
        
        public UIВернутьWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button5";
            this.WindowTitles.Add("Файловый Путь Тестер");
            #endregion
        }
        
        #region Properties
        public WinButton UIВернутьButton
        {
            get
            {
                if ((this.mUIВернутьButton == null))
                {
                    this.mUIВернутьButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIВернутьButton.SearchProperties[WinButton.PropertyNames.Name] = "Вернуть";
                    this.mUIВернутьButton.WindowTitles.Add("Файловый Путь Тестер");
                    #endregion
                }
                return this.mUIВернутьButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIВернутьButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.28315.86")]
    public class UIФайловыйПутьТестерTitleBar : WinTitleBar
    {
        
        public UIФайловыйПутьТестерTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.WindowTitles.Add("Файловый Путь Тестер");
            #endregion
        }
        
        #region Properties
        public WinButton UIЗакрытьButton
        {
            get
            {
                if ((this.mUIЗакрытьButton == null))
                {
                    this.mUIЗакрытьButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIЗакрытьButton.SearchProperties[WinButton.PropertyNames.Name] = "Закрыть";
                    this.mUIЗакрытьButton.WindowTitles.Add("Файловый Путь Тестер");
                    #endregion
                }
                return this.mUIЗакрытьButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIЗакрытьButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.28315.86")]
    public class UIОшибкаWindow : WinWindow
    {
        
        public UIОшибкаWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Ошибка";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Ошибка");
            #endregion
        }
        
        #region Properties
        public UIОКWindow UIОКWindow
        {
            get
            {
                if ((this.mUIОКWindow == null))
                {
                    this.mUIОКWindow = new UIОКWindow(this);
                }
                return this.mUIОКWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIОКWindow mUIОКWindow;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.28315.86")]
    public class UIОКWindow : WinWindow
    {
        
        public UIОКWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "2";
            this.WindowTitles.Add("Ошибка");
            #endregion
        }
        
        #region Properties
        public WinButton UIОКButton
        {
            get
            {
                if ((this.mUIОКButton == null))
                {
                    this.mUIОКButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIОКButton.SearchProperties[WinButton.PropertyNames.Name] = "ОК";
                    this.mUIОКButton.WindowTitles.Add("Ошибка");
                    #endregion
                }
                return this.mUIОКButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIОКButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.28315.86")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Рабочий стол";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32769";
            #endregion
        }
        
        #region Properties
        public UIFolderViewWindow UIFolderViewWindow
        {
            get
            {
                if ((this.mUIFolderViewWindow == null))
                {
                    this.mUIFolderViewWindow = new UIFolderViewWindow(this);
                }
                return this.mUIFolderViewWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIFolderViewWindow mUIFolderViewWindow;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.28315.86")]
    public class UIFolderViewWindow : WinWindow
    {
        
        public UIFolderViewWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            #endregion
        }
        
        #region Properties
        public WinListItem UIWFApplicationexeярлыListItem
        {
            get
            {
                if ((this.mUIWFApplicationexeярлыListItem == null))
                {
                    this.mUIWFApplicationexeярлыListItem = new WinListItem(this);
                    #region Условия поиска
                    this.mUIWFApplicationexeярлыListItem.SearchProperties[WinListItem.PropertyNames.Name] = "WFApplication.exe — ярлык";
                    #endregion
                }
                return this.mUIWFApplicationexeярлыListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUIWFApplicationexeярлыListItem;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.28315.86")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Контекст";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32768";
            #endregion
        }
        
        #region Properties
        public UIКонтекстMenu UIКонтекстMenu
        {
            get
            {
                if ((this.mUIКонтекстMenu == null))
                {
                    this.mUIКонтекстMenu = new UIКонтекстMenu(this);
                }
                return this.mUIКонтекстMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIКонтекстMenu mUIКонтекстMenu;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "16.0.28315.86")]
    public class UIКонтекстMenu : WinMenu
    {
        
        public UIКонтекстMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinMenu.PropertyNames.Name] = "Контекст";
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIОткрытьMenuItem
        {
            get
            {
                if ((this.mUIОткрытьMenuItem == null))
                {
                    this.mUIОткрытьMenuItem = new WinMenuItem(this);
                    #region Условия поиска
                    this.mUIОткрытьMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Открыть";
                    #endregion
                }
                return this.mUIОткрытьMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIОткрытьMenuItem;
        #endregion
    }
}
